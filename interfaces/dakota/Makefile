# Copyright 2013 National Renewable Energy Laboratory (NREL)
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 
# ++==++==++==++==++==++==++==++==++==++==
#CC = /opt/local/bin/g++-mp-4.5 
#CC = mpicc
####CC = /Users/pgraf/opt/mpich2-1.2.1p1.gfortran-mp-4.5/bin/mpic++
#CC = gcc
#CXX = /opt/local/bin/g++-mp-4.5 
####CXX = /Users/pgraf/opt/mpich2-1.2.1p1.gfortran-mp-4.5/bin/mpic++
#CXX = g++
CXX = g++-5
#CXX = gcc-mp-4.3
#CXX = mpic++

LD = ld

INCLUDE_DIR = -I/usr/local/Cellar/boost/1.58.0/include/boost/predef/os/ -I/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/numpy/core/include/ -I/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/include/python2.7 -I/usr/local/include -I/usr/local/Dakota/include -I/opt/X11/include/X11 -I/opt/X11/include -I/Library/Python/2.7/site-packages/numpy/core/include -I/usr/local/dakota_darwin/include -I/usr/local/Dakota/dakota-6.2.0.src/src -I/usr/local/Cellar/boost/1.58.0/include/boost/predef/os -I/usr/local/Dakota/src -I/usr/local/Dakota/dakota-6.2.0.src/src/

DAK_INCDIR = -I/usr/local/Dakota/ -I/usr/local//Dakota/include

LIB_DIR = -L/usr/lib 
LIB_PY = /usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/Python
LIBS =  -lboost_python -lboost_mpi -lboost_system

# -lpython2.6
# -L/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/config

# LIBMODEOBJ = /Users/pgraf/opt/Dakota/Dakota_NREL/src/library_mode.o
#LIBMODEOBJ = 

#COMPILER_LIBS = -L/opt/local/lib/gcc45/gcc/i386-apple-darwin9/4.5.0 -L/opt/local/lib/gcc45/gcc/i386-apple-darwin9/4.5.0/../../.. /opt/local/lib/gcc45/libgfortran.dylib -lm -lgcc_s.10.5 -lgcc_ext.10.5 -lSystem -ldl

#COMPILER_LIBS = -L/usr/lib/gcc/i686-apple-darwin9/4.0.1/ -lm -lgcc  -lSystem -ldl   -L/opt/local/lib/gcc45/gcc/i386-apple-darwin9/4.5.0/../../.. /opt/local/lib/gcc45/libgfortran.dylib  -lgcc_ext.10.5
COMPILER_LIBS = -L/usr/local/lib/gcc/5/gcc/x86_64-apple-darwin13.4.0/5.1.0/ lm -lgcc  -lSystem -ldl   -L/usr/local/Cellar/gcc/5.1.0/lib/gcc/5/i386 /usr/local/Cellar/gcc/5.1.0/lib/gcc/5/i386/libgfortran.dylib  -lgcc_ext.10.5


# DAKOTA_LIBS = -L/Users/pgraf/root/dakota/lib/ -ldakota -llhs -lnewmat -lnidr -lopt -lpecos -lconmin -lsparsegrid -lteuchos 
DAKOTA_LIBS = -L/usr/local/Dakota/li -ldakota -llhs -lnewmat -lnidr -lopt -lpecos -lconmin -lsparsegrid -lteuchos 
DAKOTA = $(DAKOTA_LIBS) -L/usr/X11/lib -lSM -lICE -llapack -lblas $(COMPILER_LIBS)

#-L/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/config -lpython2.6 -ldl

OBJS_BASE = python_interface.o dakface.o
OBJS_TDAKOTA = $(OBJS_BASE) tdakota_main.o
OBJS_DAKOTA = dakota_python_binding.o $(OBJS_BASE) 
OBJS_OLDDAKOTA = dakota_python_binding.o  $(LIBMODEOBJ) 
OBJS_TESTBINDING = test_python_binding.o

FFLAGS = -g
CFLAGS = -g -DHAVE_MPI -DDAKOTA_PYTHON_NUMPY
TESTCFLAGS = -g 
LIBLDFLAGS = -g 
LIBLDFLAGSDYLD = -g -dynamiclib
LDFLAGS = -g 

#NOTE: twisted_dakota need TDAKOTA so a main() gets built, and so python is initialized

#all: twisted_dakota
#all: twisted_dakota 
#all: twisted_dakota  dakota_py test_binding_py
all: dakota_py test_binding_py
#old_dakota_py

twisted_dakota: $(OBJS_TDAKOTA)
	$(CXX) $(LIBLDFLAGS) $(DAKOTA) $(OBJS_TDAKOTA) $(LIB_DIR)  $(LIB_PY) $(LIBS)  -o tdakota

dakota_py: $(OBJS_DAKOTA)
	$(CXX) $(LIBLDFLAGSDYLD) $(DAKOTA) $(OBJS_DAKOTA) $(LIB_DIR) $(LIB_PY) $(LIBS)  -o _dakota.so

old_dakota_py: $(OBJS_OLDDAKOTA)
	$(CXX) $(LIBLDFLAGSDYLD) $(DAKOTA) $(OBJS_OLDDAKOTA) $(LIB_DIR) $(LIB_PY) $(LIBS)  -o _olddakota.so

test_binding_py: $(OBJS_TESTBINDING)
	$(CXX) $(LIBLDFLAGSDYLD) $(LIB_DIR) $(LIB_PY)  $(OBJS_TESTBINDING) $(LIBS)  -o _testbinding.so


.f.o:
	$(F77) $(INCLUDE_DIR) $(FFLAGS) -c $< -o $@
.c.o:
	$(CC)  $(INCLUDE_DIR) $(CFLAGS) -c $< -o $@
.cpp.o:
	$(CXX)  $(INCLUDE_DIR) $(CFLAGS) -c $< -o $@
.cc.o:
	$(CXX)  $(INCLUDE_DIR) $(CFLAGS)   -c $< -o $@

clean:
	rm -f *.o

